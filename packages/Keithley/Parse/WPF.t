use warnings;
use strict;
use Test::More 'no_plan';
use lib '/dm5/ki/adaptive_infrastructure/packages';
require Test::Homebrew_Exception;
require Test::Lists;
use Keithley::Parse::WPF;

my $wpf_text = q{
#Keithley Wafer Plan Definition File
Version,1.1
File,D196P751X2185Xweird.wpf
Date,07/01/2016
Comment, Procedurally generated by Matt
Wafer,D196P751X2185Xweird.wdf
Limits,D196P751X2185Xweird.klf
Probe,MPRUxx.pcf
SS_Sort,NO
RevID,$Revision: 1.3 $
<EOH>
<EOSP>
E035_SBPD_A_SCR_AL_B.ktm,STD
E035_MET1234R1BV2PM.ktm,STD
E035_MET1234R2AV2PM.ktm,STD
E035_MCAPPC5LM4BV2PM.ktm,STD
E035_VIA6LM1CV2PM.ktm,STD
E035_VIA6LM2CV2PM.ktm,STD
E035_CONTN1AV2PM.ktm,STD
E035_CONTP1AV2PM.ktm,STD
E035_MET56R1CV2PM.ktm,STD
E035_COREXTR3CV2PM.ktm,STD
E035_INLINEECD1AV2PM.ktm,STD
E035_INLINEECD2BV2PM.ktm,STD
E035_C035SRAM3BV2.ktm,STD
E035_RSHEET2BV2PM.ktm,STD
E035_LVCAPISONP1BV2PM.ktm,STD
E035_C35WSA1DV2PM.ktm,STD
E035_C35WSA2DV2PM.ktm,STD
E035_IO33XTR2DV2PM.ktm,STD
E035_HVCAPISONP1BV2PM.ktm,STD
E035_WLRMETINTAV2.ktm,STD
E035_FRAM_SPMC_BIT_A.ktm,STD
EF35_FRAM_SPMC_CHAIN_A_2.ktm,STD
<EOW>
};
my $expected_ktms = [
    "E035_SBPD_A_SCR_AL_B.ktm",
    "E035_MET1234R1BV2PM.ktm",
    "E035_MET1234R2AV2PM.ktm",
    "E035_MCAPPC5LM4BV2PM.ktm",
    "E035_VIA6LM1CV2PM.ktm",
    "E035_VIA6LM2CV2PM.ktm",
    "E035_CONTN1AV2PM.ktm",
    "E035_CONTP1AV2PM.ktm",
    "E035_MET56R1CV2PM.ktm",
    "E035_COREXTR3CV2PM.ktm",
    "E035_INLINEECD1AV2PM.ktm",
    "E035_INLINEECD2BV2PM.ktm",
    "E035_C035SRAM3BV2.ktm",
    "E035_RSHEET2BV2PM.ktm",
    "E035_LVCAPISONP1BV2PM.ktm",
    "E035_C35WSA1DV2PM.ktm",
    "E035_C35WSA2DV2PM.ktm",
    "E035_IO33XTR2DV2PM.ktm",
    "E035_HVCAPISONP1BV2PM.ktm",
    "E035_WLRMETINTAV2.ktm",
    "E035_FRAM_SPMC_BIT_A.ktm",
    "EF35_FRAM_SPMC_CHAIN_A_2.ktm",
];

my $wpf = Parse::WPF->new($wpf_text);
my $ktms = $wpf->get_all_ktms();


ok(lists_identical($ktms, $expected_ktms), "Correctly extracted ktms from wpf");
